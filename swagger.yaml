openapi: 3.0.0
info:
  title: Spotify API
  version: 1.0.0
components:
  schemas:
    Playlist:
      type: object
      properties:
        collaborative:
          type: boolean
        description:
          type: string
        external_urls:
          type: object
        href:
          type: string
        id:
          type: string
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              height:
                type: integer
              width:
                type: integer
        name:
          type: string
        owner:
          type: object
          properties:
            external_urls:
              type: object
              properties:
                spotify:
                  type: string
            followers:
              type: object
              properties:
                href:
                  type: string
                total:
                  type: integer
            href:
              type: string
            id:
              type: string
            type:
              type: string
            uri:
              type: string
            display_name:
              type: string
        public:
          type: boolean
        snapshot_id:
          type: string
        tracks:
          type: object
          properties:
            href:
              type: string
            total:
              type: integer
        type:
          type: string
        uri:
          type: string
    User:
      type: object
      properties:
        display_name:
          type: string
        external_urls:
          type: object
          properties:
            spotify:
              type: string
        followers:
          type: object
          properties:
            href:
              type: string
            total:
              type: integer
        href:
          type: string
        id:
          type: string
        images:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              height:
                type: integer
              width:
                type: integer
        type:
          type: string
        uri:
          type: string
    Login:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string  
    Refresh:
      type: object
      properties:
        accessToken:
          type: string
paths:
  "/spotify/user/{id}":
    get:
      summary: Get user profile by id
      description: Returns Spotify user profile.
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user to retrieve.
          schema:
            type: string
      responses:
        "200":
          description: User profile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  "/spotify/playlists/{id}":
    get:
      summary: Get user's Spotify playlists by id
      description: Returns Spotify user playlists.
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the user.
          schema:
            type: string
      responses:
        "200":
          description: User playlists.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Playlist"
  "/user/register":
    post:
      summary: User registration
      description: User registration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                password:
                  type: string                  
                confirmPassword:
                  type: string
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
  "/user/login":
    post:
      summary: User Login
      description: User Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string                  
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
        '401':
          description: Unauthorized - Invalid email or password
        '500':
          description: Internal Server Error - Something went wrong
  "/user/refresh":
    post:
      summary: Refresh access token
      description: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                refreshToken:
                  type: string                  
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Refresh"
